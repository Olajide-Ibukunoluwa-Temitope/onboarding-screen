{"ast":null,"code":"var _jsxFileName = \"/Users/temi/Documents/Dev/web/patronise-onboarding/src/components/custom/InputField/SelectInput/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useField } from 'formik';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectInput = props => {\n  _s();\n\n  const [field, meta] = useField(props.name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sub-heading\",\n      children: props.inputlabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select-input\",\n        ...field,\n        ...props,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), props.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: `${option.value}`,\n          children: option.value\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [\"*\", meta.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = SelectInput;\nexport default SelectInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectInput\");","map":{"version":3,"sources":["/Users/temi/Documents/Dev/web/patronise-onboarding/src/components/custom/InputField/SelectInput/index.jsx"],"names":["React","useField","SelectInput","props","field","meta","name","inputlabel","options","map","option","value","id","error","touched"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAO,cAAP;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBJ,QAAQ,CAACE,KAAK,CAACG,IAAP,CAA9B;AACA,sBACI;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA,gBAA4BH,KAAK,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACI;AACI,QAAA,SAAS,EAAC,cADd;AAAA,WAEQH,KAFR;AAAA,WAGQD,KAHR;AAAA,gCAKI;AAAQ,UAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,gBALJ,EAMKA,KAAK,CAACK,OAAN,CAAcC,GAAd,CAAmBC,MAAD,iBACf;AAAwB,UAAA,KAAK,EAAG,GAAEA,MAAM,CAACC,KAAM,EAA/C;AAAA,oBAAoDD,MAAM,CAACC;AAA3D,WAAaD,MAAM,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,gBADH,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAWKP,IAAI,CAACQ,KAAL,IAAcR,IAAI,CAACS,OAAnB,iBAA8B;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,wBAAuBT,IAAI,CAACQ,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAXnC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CArBD;;GAAMX,W;UACoBD,Q;;;KADpBC,W;AAuBN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\nimport './styles.css'\n\nconst SelectInput = (props) => {\n    const [field, meta] = useField(props.name);\n    return (\n        <div>\n            <p className='sub-heading'>{props.inputlabel}</p>\n            <div className='select-input-container'>\n                <select \n                    className='select-input'\n                    {...field}\n                    {...props}\n                >\n                    <option value=\"\"></option>\n                    {props.options.map((option) => (\n                        <option key={option.id} value={`${option.value}`} >{option.value}</option>\n                    ))}\n                </select>\n                {meta.error && meta.touched && <p className='error'>*{meta.error}</p>}\n            </div>\n            \n        </div>\n    )\n}\n\nexport default SelectInput;\n"]},"metadata":{},"sourceType":"module"}