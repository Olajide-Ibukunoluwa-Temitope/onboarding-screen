{"ast":null,"code":"var _jsxFileName = \"/Users/temi/Documents/Dev/web/patronise-onboarding/src/components/custom/Stepper/index.jsx\";\nimport React from 'react';\nimport { ReactComponent as CompletedMarkIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/icons/completed_mark.svg\";\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stepper = ({\n  steps,\n  activeStep,\n  completedSteps\n}) => {\n  const currentStep = steps[activeStep - 1].stepId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-flex\",\n      id: \"stepper\",\n      children: steps.map(step => {\n        const completedStep = completedSteps.find(completedStepId => completedStepId === step.stepId); // check if the current step in the loop is completed\n\n        const bgColor = activeStep === step.stepId ? '#006AFF' : completedStep === step.stepId ? '#DCEAFF' : '#E4E9EF'; // handle bg color if the current step in the loop is the active step or not\n\n        const titleColor = activeStep === step.stepId ? '#141737' : '#A5B4CB'; // handle title color if the current step in the loop is the active step or not\n\n        const stepNumColor = activeStep === step.stepId ? '#FFFFFF' : '#A5B4CB'; // handle step um color color if the current step in the loop is the active step or not\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-num\",\n            style: {\n              color: `${stepNumColor}`,\n              backgroundColor: `${bgColor}`\n            },\n            children: completedStep === step.stepId ? /*#__PURE__*/_jsxDEV(CompletedMarkIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 66\n            }, this) : step.stepId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stepper-title\",\n            style: {\n              color: `${titleColor}`\n            },\n            children: step.stepTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)]\n        }, step.stepId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mobile-stepper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-num\",\n        style: {\n          color: 'white',\n          backgroundColor: `#006AFF`\n        },\n        children: currentStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Stepper;\nexport default Stepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stepper\");","map":{"version":3,"sources":["/Users/temi/Documents/Dev/web/patronise-onboarding/src/components/custom/Stepper/index.jsx"],"names":["React","Stepper","steps","activeStep","completedSteps","currentStep","stepId","map","step","completedStep","find","completedStepId","bgColor","titleColor","stepNumColor","color","backgroundColor","stepTitle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,OAAO,cAAP;;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAD,KAAyC;AACrD,QAAMC,WAAW,GAAGH,KAAK,CAACC,UAAU,GAAG,CAAd,CAAL,CAAsBG,MAA1C;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,EAAE,EAAC,SAAjC;AAAA,gBACKJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AACjB,cAAMC,aAAa,GAAGL,cAAc,CAACM,IAAf,CAAoBC,eAAe,IAAIA,eAAe,KAAKH,IAAI,CAACF,MAAhE,CAAtB,CADiB,CAC8E;;AAC/F,cAAMM,OAAO,GAAGT,UAAU,KAAKK,IAAI,CAACF,MAApB,GAA6B,SAA7B,GAAyCG,aAAa,KAAKD,IAAI,CAACF,MAAvB,GAAgC,SAAhC,GAA4C,SAArG,CAFiB,CAE+F;;AAChH,cAAMO,UAAU,GAAGV,UAAU,KAAKK,IAAI,CAACF,MAApB,GAA6B,SAA7B,GAAyC,SAA5D,CAHiB,CAGsD;;AACvE,cAAMQ,YAAY,GAAGX,UAAU,KAAKK,IAAI,CAACF,MAApB,GAA6B,SAA7B,GAAyC,SAA9D,CAJiB,CAIwD;;AAEzE,4BACI;AAAuB,UAAA,SAAS,EAAC,gBAAjC;AAAA,kCACI;AACI,YAAA,SAAS,EAAC,UADd;AAEI,YAAA,KAAK,EAAE;AACHS,cAAAA,KAAK,EAAG,GAAED,YAAa,EADpB;AAEHE,cAAAA,eAAe,EAAG,GAAEJ,OAAQ;AAFzB,aAFX;AAAA,sBAOKH,aAAa,KAAKD,IAAI,CAACF,MAAvB,gBAAgC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,oBAAhC,GAAwDE,IAAI,CAACF;AAPlE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI;AAAK,YAAA,SAAS,EAAC,eAAf;AAA+B,YAAA,KAAK,EAAE;AAACS,cAAAA,KAAK,EAAG,GAAEF,UAAW;AAAtB,aAAtC;AAAA,sBAAiEL,IAAI,CAACS;AAAtE;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA,WAAUT,IAAI,CAACF,MAAf;AAAA;AAAA;AAAA;AAAA,gBADJ;AAeH,OArBA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAyBI;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA,6BACI;AACI,QAAA,SAAS,EAAC,UADd;AAEI,QAAA,KAAK,EAAE;AACHS,UAAAA,KAAK,EAAE,OADJ;AAEHC,UAAAA,eAAe,EAAG;AAFf,SAFX;AAAA,kBAOKX;AAPL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,CA5CD;;KAAMJ,O;AA8CN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { ReactComponent as CompletedMarkIcon } from '../../../assets/icons/completed_mark.svg';\n\nimport './styles.css';\n\n\nconst Stepper = ({steps, activeStep, completedSteps}) => {\n    const currentStep = steps[activeStep - 1].stepId;\n     \n    return (\n        <div className='display-flex'>\n            <div className='display-flex' id='stepper'>\n                {steps.map((step) => {\n                    const completedStep = completedSteps.find(completedStepId => completedStepId === step.stepId); // check if the current step in the loop is completed\n                    const bgColor = activeStep === step.stepId ? '#006AFF' : completedStep === step.stepId ? '#DCEAFF' : '#E4E9EF'; // handle bg color if the current step in the loop is the active step or not\n                    const titleColor = activeStep === step.stepId ? '#141737' : '#A5B4CB'; // handle title color if the current step in the loop is the active step or not\n                    const stepNumColor = activeStep === step.stepId ? '#FFFFFF' : '#A5B4CB'; // handle step um color color if the current step in the loop is the active step or not\n\n                    return(\n                        <div key={step.stepId} className='step-container'>\n                            <div \n                                className='step-num' \n                                style={{\n                                    color: `${stepNumColor}`,\n                                    backgroundColor: `${bgColor}`,\n                                }}\n                            >\n                                {completedStep === step.stepId ? <CompletedMarkIcon /> : step.stepId}\n                            </div>\n                            <div className='stepper-title' style={{color: `${titleColor}`}}>{step.stepTitle}</div>\n                        </div>\n                    )\n                    \n                })}\n            </div>\n            <div id='mobile-stepper'>\n                <div \n                    className='step-num' \n                    style={{\n                        color: 'white',\n                        backgroundColor: `#006AFF`,\n                    }}\n                >\n                    {currentStep}\n                </div>\n            </div>\n            \n        </div>\n        \n    )\n}\n\nexport default Stepper;\n"]},"metadata":{},"sourceType":"module"}